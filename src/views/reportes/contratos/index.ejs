<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0">Reporte de Contratos</h1>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Resumen de Contratos</h6>
            <div class="btn-group" role="group">
                <button type="button" class="btn btn-outline-primary btn-sm active" data-filter="todos">
                    Todos <span class="badge bg-primary ms-1"><%= contratos.length %></span>
                </button>
                <button type="button" class="btn btn-outline-success btn-sm" data-filter="activos">
                    Activos <span class="badge bg-success ms-1"><%= contratos.filter(c => c.estado === 'Activo').length %></span>
                </button>
                <button type="button" class="btn btn-outline-danger btn-sm" data-filter="vencidos">
                    Vencidos <span class="badge bg-danger ms-1"><%= contratos.filter(c => c.estado === 'Vencido').length %></span>
                </button>
                <button type="button" class="btn btn-outline-warning btn-sm" data-filter="pendientes">
                    Pendientes <span class="badge bg-warning text-dark ms-1"><%= contratos.filter(c => c.estado === 'Pendiente').length %></span>
                </button>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover" id="tablaContratos" style="width:100%">
                    <thead class="table-light">
                        <tr>
                            <th>ID</th>
                            <th>Tipo</th>
                            <th>Fechas</th>
                            <th>Duración</th>
                            <th>Estado</th>
                            <th>Cliente</th>
                            <th>Inmueble</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (typeof contratos !== 'undefined' && contratos.length > 0) { %>
                            <% contratos.forEach(contrato => { 
                                const fechaInicio = new Date(contrato.fecha_inicio);
                                const fechaFin = new Date(contrato.fecha_fin);
                                const hoy = new Date();
                                hoy.setHours(0, 0, 0, 0);
                                
                                let diasRestantes = Math.ceil((fechaFin - hoy) / (1000 * 60 * 60 * 24));
                                let textoDuracion = '';
                                
                                if (diasRestantes > 0) {
                                    textoDuracion = `Vence en ${diasRestantes} día${diasRestantes !== 1 ? 's' : ''}`;
                                } else if (diasRestantes === 0) {
                                    textoDuracion = 'Vence hoy';
                                    diasRestantes = 0;
                                } else {
                                    textoDuracion = `Vencido hace ${Math.abs(diasRestantes)} día${diasRestantes !== -1 ? 's' : ''}`;
                                }
                                
                                const esVencido = diasRestantes < 0;
                                const esPorVencer = diasRestantes <= 7 && diasRestantes >= 0;
                            %>
                                <tr class="contrato-row" data-estado="<%= contrato.estado.toLowerCase() %>" data-vencimiento="<%= esVencido ? 'vencido' : (esPorVencer ? 'por-vencer' : 'vigente') %>">
                                    <td class="fw-bold">#<%= contrato.id_contrato %></td>
                                    <td>
                                        <span class="badge <%- contrato.tipo === 'venta' ? 'bg-primary' : 'bg-info' %>">
                                            <i class="bi <%- contrato.tipo === 'venta' ? 'bi-house-door' : 'bi-house-check' %> me-1"></i>
                                            <%- typeof contrato.tipo === 'string' ? contrato.tipo.charAt(0).toUpperCase() + contrato.tipo.slice(1) : '' %>
                                        </span>
                                    </td>
                                    <td>
                                        <div class="d-flex flex-column">
                                            <small class="text-muted">Inicio: <%- fechaInicio.toLocaleDateString('es-ES', { day: '2-digit', month: 'short', year: 'numeric' }) %></small>
                                            <small class="text-muted">Fin: <%- fechaFin.toLocaleDateString('es-ES', { day: '2-digit', month: 'short', year: 'numeric' }) %></small>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="bi <%- esVencido ? 'bi-exclamation-triangle-fill text-danger' : (esPorVencer ? 'bi-clock-history text-warning' : 'bi-check-circle-fill text-success') %> me-2"></i>
                                            <span class="<%= esVencido ? 'text-danger' : (esPorVencer ? 'text-warning' : 'text-success') %>">
                                                <%= textoDuracion %>
                                            </span>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge <%- contrato.estado === 'Activo' ? 'bg-success' : (contrato.estado === 'Vencido' ? 'bg-danger' : 'bg-warning text-dark') %>">
                                            <i class="bi <%- contrato.estado === 'Activo' ? 'bi-check-circle' : (contrato.estado === 'Vencido' ? 'bi-x-circle' : 'bi-hourglass-split') %> me-1"></i>
                                            <%= contrato.estado %>
                                        </span>
                                    </td>
                                    <td><%= contrato.cliente %></td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="bi bi-house-door me-2 text-muted"></i>
                                            <span><%= contrato.inmueble %></span>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="7" class="text-center py-4">
                                    <i class="bi bi-inbox text-muted" style="font-size: 2.5rem;"></i>
                                    <p class="mt-2 mb-0">No se encontraron contratos</p>
                                </td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Inicializar DataTable
    const table = $('#tablaContratos').DataTable({
        language: {
            url: '//cdn.datatables.net/plug-ins/1.10.25/i18n/Spanish.json'
        },
        order: [[2, 'asc']], // Ordenar por fecha de inicio por defecto
        columnDefs: [
            { orderable: false, targets: [0, 1, 3, 4, 5, 6] },
            { className: 'text-center', targets: [0, 1, 3, 4] },
            { width: '15%', targets: [2, 6] },
            { width: '10%', targets: [0, 1, 3, 4] },
            { width: '20%', targets: [5] }
        ],
        dom: '<"d-flex justify-content-between align-items-center mb-3"f<"ms-3"l>>rtip',
        pageLength: 10,
        responsive: true
    });

    // Filtros de estado
    $('[data-filter]').on('click', function() {
        const filter = $(this).data('filter');
        
        // Actualizar botones activos
        $('[data-filter]').removeClass('active');
        $(this).addClass('active');
        
        // Aplicar filtro
        if (filter === 'todos') {
            table.column(4).search('').draw();
        } else {
            table.column(4).search('^' + $(this).text().trim().split(' ')[0] + '$', true, false).draw();
        }
    });

    // Exportar a PDF
    $('#btnExportarPDF').on('click', function() {
        // Implementar lógica de exportación a PDF
        alert('Exportar a PDF - Funcionalidad en desarrollo');
    });

    // Exportar a Excel
    $('#btnExportarExcel').on('click', function() {
        // Implementar lógica de exportación a Excel
        alert('Exportar a Excel - Funcionalidad en desarrollo');
    });

    // Resaltar filas por vencer o vencidas
    $('.contrato-row').each(function() {
        const $row = $(this);
        if ($row.data('vencimiento') === 'por-vencer') {
            $row.addClass('table-warning');
        } else if ($row.data('vencimiento') === 'vencido') {
            $row.addClass('table-danger');
        }
    });
});
</script>

<!-- Modal para ver detalles del contrato -->
<div class="modal fade" id="modalDetalleContrato" tabindex="-1" aria-labelledby="modalDetalleContratoLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="modalDetalleContratoLabel">Detalles del Contrato</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="detalleContratoBody">
                <!-- Los detalles se cargarán aquí dinámicamente -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" id="btnImprimirContrato">
                    <i class="bi bi-printer me-1"></i> Imprimir
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    // Inicializar tooltips
    document.addEventListener('DOMContentLoaded', function() {
        // Inicializar tooltips de Bootstrap
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
        
        // Inicializar DataTable
        if ($.fn.DataTable) {
            $('#tablaContratos').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.10.25/i18n/Spanish.json'
                },
                responsive: true,
                order: [[0, 'desc']] // Ordenar por ID de contrato de forma descendente
            });
        }
    });

    // Función para buscar en la tabla
    document.getElementById('buscarContrato')?.addEventListener('keyup', function() {
        const input = this.value.toLowerCase();
        const filas = document.querySelectorAll('#tablaContratos tbody tr');
        
        filas.forEach(fila => {
            const textoFila = fila.textContent.toLowerCase();
            fila.style.display = textoFila.includes(input) ? '' : 'none';
        });
    });

    // Función para ver detalles del contrato
    function verDetalleContrato(idContrato) {
        // Aquí iría la lógica para cargar los detalles del contrato
        // Por ahora, solo mostramos un mensaje
        document.getElementById('detalleContratoBody').innerHTML = `
            <div class="text-center py-4">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Cargando...</span>
                </div>
                <p class="mt-2">Cargando detalles del contrato...</p>
            </div>
        `;
        
        const modal = new bootstrap.Modal(document.getElementById('modalDetalleContrato'));
        modal.show();
        
        // Simulamos una carga de datos
        setTimeout(() => {
            document.getElementById('detalleContratoBody').innerHTML = `
                <div class="row mb-3">
                    <div class="col-md-6">
                        <h6>Información del Contrato #${idContrato}</h6>
                        <p><strong>Tipo:</strong> Alquiler</p>
                        <p><strong>Estado:</strong> <span class="badge bg-success">Activo</span></p>
                        <p><strong>Fecha Inicio:</strong> 01/01/2023</p>
                        <p><strong>Fecha Fin:</strong> 31/12/2023</p>
                    </div>
                    <div class="col-md-6">
                        <h6>Información del Cliente</h6>
                        <p><strong>Nombre:</strong> Juan Pérez</p>
                        <p><strong>Documento:</strong> 12345678</p>
                        <p><strong>Teléfono:</strong> +51 987 654 321</p>
                        <p><strong>Email:</strong> juan.perez@example.com</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <h6>Detalles del Inmueble</h6>
                        <p><strong>Dirección:</strong> Av. Principal 123, Lima</p>
                        <p><strong>Tipo:</strong> Departamento</p>
                        <p><strong>Habitaciones:</strong> 3</p>
                        <p><strong>Precio Mensual:</strong> S/ 1,500.00</p>
                    </div>
                </div>
            `;
        }, 1000);
    }

    // Función para editar contrato
    function editarContrato(idContrato) {
        // Implementar lógica de edición
        alert(`Editar contrato #${idContrato}`);
    }

    // Función para confirmar eliminación
    function confirmarEliminar(idContrato, tipoContrato) {
        if (confirm(`¿Está seguro de eliminar el contrato de ${tipoContrato} (ID: ${idContrato})?`)) {
            // Implementar lógica de eliminación
            alert(`Contrato #${idContrato} eliminado correctamente`);
        }
    }

    // Exportar a PDF
    document.getElementById('btnExportarPDF').addEventListener('click', function() {
        // Implementar lógica de exportación a PDF
        alert('Exportando a PDF...');
    });

    // Exportar a Excel
    document.getElementById('btnExportarExcel').addEventListener('click', function() {
        // Implementar lógica de exportación a Excel
        alert('Exportando a Excel...');
    });

    // Imprimir contrato
    document.getElementById('btnImprimirContrato').addEventListener('click', function() {
        window.print();
    });
</script>

<style>
    .table th {
        white-space: nowrap;
        vertical-align: middle;
    }
    .table td {
        vertical-align: middle;
    }
    .badge {
        font-size: 0.8em;
        font-weight: 500;
    }
    .btn-sm {
        padding: 0.25rem 0.5rem;
        font-size: 0.75rem;
    }
    .hover-effect:hover {
        transform: translateY(-1px);
        transition: transform 0.2s;
    }
    @media print {
        .no-print {
            display: none !important;
        }
        body * {
            visibility: hidden;
        }
        #detalleContratoBody, #detalleContratoBody * {
            visibility: visible;
        }
        #detalleContratoBody {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
        }
    }
</style>